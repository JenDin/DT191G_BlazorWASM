@page "/"

<PageTitle>Hem</PageTitle>

<h1 class="home-title">Välkommen!</h1>

<article class="home-article">
    <h2>Blazor </h2>
    <p>Blazor WebAssembly är ett webbramverk för utveckling av Single Page Applications i C# .NET utvecklat av Microsoft. Blazor skapades för göra det möjligt att skapa användargränssnitt med C# och .NET ekosystem med en komponentbaserad design, istället för med JavaScript. Det går att bygga frontend och backend i C# och därmed jobba fullstack i C#. Blazor kan köras på två olika sätt, antingen med Blazor Server eller med Blazor WebAssembly.</p>

    <h2>Blazor Server</h2>
    <p>Blazor Server är den ena versionen som innebär att applikationen körs på servern i en ASP.NET Core app. Användargränssnittet, händelsehantering och JavaScript-anrop hanteras via SignalR som är en teknik som tillhandahåller en tvåvägskommunikation mellan klient och server. Detta innebär att klienten kan begära och hämta data och att servern också kan skicka data utan att en förfrågan har gjorts från klienten.</p>

    <div class="image-container">
        <img src="./blazor_server.png" alt="Blazor Server använder SignalR för att uppdatera the Document Object Model" />
    </div>

    <h2>Blazor WebAssembly</h2>
    <p>Blazor WebAssembly är den andra versionen som möjliggör utveckling av interaktiva applikationer på klient-sidan med C#, något som tidigare endast möjligt med JavaScript. Utvecklingen av webbplatser och mobilapplikationer är därmed inne i en fascinerade era. Blazor WebAssembly applikationer använder en WebAssembly-teknik för exklusiv för .NET som nu gör det möjligt att köra .NET-kod direkt på klientsidan utan att gå via en server. </p>

    <div class="image-container">
        <img src="./blazor_wasm.png" alt="Blazor WebAsssembly uppdaterar the Document Object Model direkt" />
    </div>
</article>